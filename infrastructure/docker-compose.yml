version: "3.8"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # Two listeners:
      # - 9092 (internal, used by backend container via 'kafka:9092')
      # - 29092 (external, used by your host via localhost:29092)
#      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  mysql:
    image: mysql:8.0
    container_name: crypto-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: crypto_db
      MYSQL_USER: crypto_user
      MYSQL_PASSWORD: crypto_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  clickhouse:
    image: clickhouse/clickhouse-server:23.8
    container_name: clickhouse
    ports:
      - "8123:8123"   # HTTP interface
      - "9000:9000"   # Native TCP client
    volumes:
      - clickhouse_data:/var/lib/clickhouse

#  backend:
#    build:
#      context: ../backend
#      dockerfile: DockerFile
#    container_name: crypto-backend
#    depends_on:
#      - mysql
#      - kafka
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/crypto_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
#      SPRING_DATASOURCE_USERNAME: crypto_user
#      SPRING_DATASOURCE_PASSWORD: crypto_pass
  backend:
    build:
      context: ../backend
      dockerfile: DockerFile
    container_name: crypto-backend
    depends_on:
      - mysql
      - kafka
    entrypoint: [ "sh", "-c", "until nc -z mysql 3306; do echo waiting for mysql; sleep 2; done; java -jar app.jar" ]
    ports:
      - "8080:8080"


  frontend:
    build:
      context: ../crypto-dashboard-frontend
      dockerfile: DockerFile
    container_name: crypto-frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend

volumes:
  mysql_data:
  clickhouse_data:
